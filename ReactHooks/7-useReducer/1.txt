[useReducer]

1. useReducer는 useState처럼 state를 생성하고 관리할수 있게 해주는 도구이다.

	- 언제 사용할까??
	```
		여러개의 하위값을 포함하는 복잡한 State를 다뤄야 될때, useState대신 useReducer를 사용하면 코드를 더 깔끔하게 관리할 수 있고, 유지보수도 좋아진다.
		{
			teacher: 'James',
			students: ['kim', 'Ann', 'John'],
			count: 3,
			locations: [
				{country: 'Korea', name: 'A'},
				{country: 'Australia', name: 'B'},
			]
		}
	
	```

		# 3가지 알아두어야 할것
		1. Reducer
		2. Dispatch
		3. Action

		- 예1. 만약에 철수라는 사람이 은행에 방문했다는 상황에서 철수가 만원을 출금해주세요라는 요청을 했을때,
		- 철수의 계좌 거래내역에서 만원이 빠져나갔다고 기록이 될것이다.
		- 여기서 철수가 직접적으로 거래내역을 업데이트 시키지 않는다. 거래내역을 업데이트 시키는건 은행이 할일이기 때문이다.
		- 그래서 철수는 은행에게 요구를 하고, 은행이 그 요구에 따라 내역을 업데이트 시켜주는 것을 기억해야 한다.
		- 거래내역을 state라고 하고, 그리고 은행을 Reducer라고 가정한다.
		- Reducer는 state를 업데이트하는 역할을 해준다.
		- 컴포넌트의 state를 변경하고 싪다면, 꼭 Reducer를 통해서 한다.
		- 마치 은행(useReducer)이 철수의 거래내역(useState)을 업데이트 해주는 것과 같다.
		- 여기서 철수의 요구라는 행위를 'Dispatch' 만원을 출금해주세요 라는 내용이 'Action'이 될수 있다.
		